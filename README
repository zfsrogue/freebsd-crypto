
Welcome to the unofficial zfs-crypto branch.

To make it clear, this branch has nothing to do with Sun, Oracle,
ZFSOnLinux, OpenSolaris, IllumOS, OpenIndiana, SmartOS, FreeBSD etc.

There are new files,

zcrypt.c
zcrypt.h
zio_crypt.c
zio_crypt.h
dsl_crypto.c
dsl_crypto.h
libzfs_crypto.c
zcrypt_common.c

which are kept "as is" as much as possible, including (possibly
irrelevant) headers.

The crypto/api/ header files are from OpenSolaris.

The crypto/api implementation is brand new, and supports "bare
minimum" features as needed by ZFS only.

All ciphers (CCM, GCM, CTR) are currently working, and compatible with
the Linux ZOL implementation.

* MACs are in use, but compute_mac() is empty, not called?

* Key needs to be CK_AES prepared, better than current

* All "// FIXME" should be inspected. In particular, known areas
  which differ are PROP_ALIAS, PROP_INHERIT, crypto vs userquota,

* Removed KEY methods "https URI" (requires curl) and pkcs11 types.

* The pool version is now 5000, and added feature flag
  "feature@encryption".

* feature@encryption goes active if any ZFS are created with encryption=on.

* Allow for readonly import of active feature@encryption, so that the non-
  encrypted filesystems could be recovered.


Current output:
```

# dd if=/dev/zero of=~/src/pool-image.bin bs=1M count=1024

# zpool create -f mypool ~/src/pool-image.bin

# zfs create -o encryption=on mypool/BOOM
  Enter passphrase for 'mypool/BOOM':
  Enter again:

# mkdir /mypool/BOOM/This.Directory.Is.Hopefully.Encrypted

# hexdump -C ../pool-image.bin |less

0041b440  07 00 00 00 00 00 00 40  00 00 00 00 00 00 74 48  |.......@......tH|
0041b450  49 53 2e 64 49 52 45 43  54 4f 52 59 2e 69 53 2e  |IS.dIRECTORY.iS.|
0041b460  68 4f 50 45 46 55 4c 4c  59 2e 65 4e 43 52 59 50  |hOPEFULLY.eNCRYP|
0041b470  54 45 44 00 00 00 00 00  00 00 00 00 00 00 00 00  |TED.............|
```

zfs/rogue
